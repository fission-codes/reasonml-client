// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("@glennsl/bs-jest/src/jest.js");
var Fission$ReasonmlClient = require("../src/Fission.bs.js");

function randomString(param) {
  return "10osidfjpaeoi4j";
}

Jest.describe("Fission.Simple", (function (param) {
        var str = "10osidfjpaeoi4j";
        var cid = /* record */[/* contents */""];
        var ipfsContent = /* record */[/* contents */""];
        Jest.beforeAllPromise(undefined, (function (param) {
                return Fission$ReasonmlClient.addStr(process.env.INTERPLANETARY_FISSION_URL, /* record */[
                                /* username */process.env.INTERPLANETARY_FISSION_USERNAME,
                                /* password */process.env.INTERPLANETARY_FISSION_PASSWORD
                              ], str).then((function (value) {
                                cid[0] = value;
                                return Fission$ReasonmlClient.content(process.env.INTERPLANETARY_FISSION_URL, value);
                              })).then((function (value) {
                              ipfsContent[0] = value;
                              return Promise.resolve(value);
                            }));
              }));
        Jest.test("same content as the original", (function (param) {
                return Jest.Expect[/* toEqual */12](str, Jest.Expect[/* expect */0](ipfsContent[0]));
              }));
        return Jest.test("gives properly formatted urls for IPFS content", (function (param) {
                      return Jest.Expect[/* toEqual */12](process.env.INTERPLANETARY_FISSION_URL + ("/ipfs/" + cid[0]), Jest.Expect[/* expect */0](Fission$ReasonmlClient.url(process.env.INTERPLANETARY_FISSION_URL, cid[0])));
                    }));
      }));

Jest.describe("Fission.User", (function (param) {
        return Jest.describe("adds strings to IPFS", (function (param) {
                      var cid = /* record */[/* contents */""];
                      var ipfsContent = /* record */[/* contents */""];
                      Jest.beforeAllPromise(undefined, (function (param) {
                              return Fission$ReasonmlClient.addStr(process.env.INTERPLANETARY_FISSION_URL, /* record */[
                                              /* username */process.env.INTERPLANETARY_FISSION_USERNAME,
                                              /* password */process.env.INTERPLANETARY_FISSION_PASSWORD
                                            ], "10osidfjpaeoi4j").then((function (value) {
                                              cid[0] = value;
                                              return Fission$ReasonmlClient.content(process.env.INTERPLANETARY_FISSION_URL, value);
                                            })).then((function (value) {
                                            ipfsContent[0] = value;
                                            return Promise.resolve(value);
                                          }));
                            }));
                      return Jest.test("filler", (function (param) {
                                    return Jest.Expect[/* toEqual */12]("1234", Jest.Expect[/* expect */0]("1234"));
                                  }));
                    }));
      }));

exports.randomString = randomString;
/*  Not a pure module */
