// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Axios = require("bs-axios/src/axios.js");
var Axios$1 = require("axios");

function $$await(promise) {
  return promise.then((function (response) {
                  return Promise.resolve(response.data);
                })).catch((function (prim) {
                return Promise.resolve(prim);
              }));
}

var octetHeader = Axios.$$Headers[/* fromObj */0]({
      "content-type": "application/octet-stream"
    });

function Simple(Base) {
  var ipfsURL = Base[/* baseUrl */0] + "/ipfs";
  var cidsURL = ipfsURL + "/cids";
  var url = function (cid) {
    return ipfsURL + cid;
  };
  var content = function (cid) {
    return $$await(Axios$1.get(ipfsURL + cid));
  };
  return /* module */[
          /* ipfsURL */ipfsURL,
          /* cidsURL */cidsURL,
          /* url */url,
          /* content */content
        ];
}

function User(Base) {
  return (function (Auth) {
      var ipfsURL = Base[/* baseUrl */0] + "/ipfs";
      var cidsURL = ipfsURL + "/cids";
      var url = function (cid) {
        return ipfsURL + cid;
      };
      var content = function (cid) {
        return $$await(Axios$1.get(ipfsURL + cid));
      };
      var auth = {
        username: Auth[/* username */0],
        password: Auth[/* password */1]
      };
      var octetConfig = {
        headers: octetHeader,
        auth: auth
      };
      var blankConfig = {
        auth: auth
      };
      var myCIDs = function (param) {
        return $$await(Axios$1.get(cidsURL, blankConfig));
      };
      var add = function (content) {
        return $$await(Axios$1.post(ipfsURL, content, octetConfig));
      };
      var addStr = function (_str) {
        return $$await(Axios$1.post(ipfsURL, str, octetConfig));
      };
      var pin = function (cid) {
        return $$await(Axios$1.put(ipfsURL + cid, { }, blankConfig));
      };
      var remove = function (cid) {
        return $$await(Axios$1.delete(ipfsURL + cid, blankConfig));
      };
      return /* module */[
              /* ipfsURL */ipfsURL,
              /* cidsURL */cidsURL,
              /* url */url,
              /* content */content,
              /* auth */auth,
              /* octetConfig */octetConfig,
              /* blankConfig */blankConfig,
              /* myCIDs */myCIDs,
              /* add */add,
              /* addStr */addStr,
              /* pin */pin,
              /* remove */remove
            ];
    });
}

var baseUrl = "http://localhost:1337";

var DefaultURL = /* module */[/* baseUrl */baseUrl];

var username = "ca2c70bc13298c5109ee";

var password = "VlBgonAFjZon2wd2VkTR3uc*p-XMd(L_Zf$nFvACpHQShqJ_Hp2Pa";

var DefaultAuth = /* module */[
  /* username */username,
  /* password */password
];

var ipfsURL = "http://localhost:1337/ipfs";

var cidsURL = "http://localhost:1337/ipfs/cids";

function url(cid) {
  return ipfsURL + cid;
}

function content(cid) {
  return $$await(Axios$1.get(ipfsURL + cid));
}

var Foo = /* module */[
  /* ipfsURL */ipfsURL,
  /* cidsURL */cidsURL,
  /* url */url,
  /* content */content
];

var ipfsURL$1 = "http://localhost:1337/ipfs";

var cidsURL$1 = "http://localhost:1337/ipfs/cids";

function url$1(cid) {
  return ipfsURL$1 + cid;
}

function content$1(cid) {
  return $$await(Axios$1.get(ipfsURL$1 + cid));
}

var auth = {
  username: username,
  password: password
};

var octetConfig = {
  headers: octetHeader,
  auth: auth
};

var blankConfig = {
  auth: auth
};

function myCIDs(param) {
  return $$await(Axios$1.get(cidsURL$1, blankConfig));
}

function add(content) {
  return $$await(Axios$1.post(ipfsURL$1, content, octetConfig));
}

function addStr(_str) {
  return $$await(Axios$1.post(ipfsURL$1, str, octetConfig));
}

function pin(cid) {
  return $$await(Axios$1.put(ipfsURL$1 + cid, { }, blankConfig));
}

function remove(cid) {
  return $$await(Axios$1.delete(ipfsURL$1 + cid, blankConfig));
}

var Bar = /* module */[
  /* ipfsURL */ipfsURL$1,
  /* cidsURL */cidsURL$1,
  /* url */url$1,
  /* content */content$1,
  /* auth */auth,
  /* octetConfig */octetConfig,
  /* blankConfig */blankConfig,
  /* myCIDs */myCIDs,
  /* add */add,
  /* addStr */addStr,
  /* pin */pin,
  /* remove */remove
];

var server = ipfsURL;

exports.$$await = $$await;
exports.octetHeader = octetHeader;
exports.Simple = Simple;
exports.User = User;
exports.DefaultURL = DefaultURL;
exports.DefaultAuth = DefaultAuth;
exports.Foo = Foo;
exports.Bar = Bar;
exports.server = server;
exports.myCIDs = myCIDs;
/* octetHeader Not a pure module */
