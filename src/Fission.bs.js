// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Axios = require("bs-axios/src/axios.js");
var Axios$1 = require("axios");

var baseURL = "http://localhost:1337";

var env_username = "ca2c70bc13298c5109ee";

var env_password = "VlBgonAFjZon2wd2VkTR3uc*p-XMd(L_Zf$nFvACpHQShqJ_Hp2Pa";

var octetHeader = Axios.$$Headers[/* fromObj */0]({
      "content-type": "application/octet-stream"
    });

function convAuth(auth) {
  return {
          username: auth[/* username */0],
          password: auth[/* password */1]
        };
}

function url(baseURL, cid) {
  return baseURL + ("/ipfs/" + cid);
}

function content(cid) {
  return Axios$1.get(url(baseURL, cid)).then((function (response) {
                  return Promise.resolve(response.data);
                })).catch((function (error) {
                return Promise.resolve(error);
              }));
}

function list(auth) {
  return Axios$1.get("http://localhost:1337/ipfs/cids", {
                  auth: convAuth(auth)
                }).then((function (response) {
                  return Promise.resolve(response.data);
                })).catch((function (error) {
                return Promise.resolve(error);
              }));
}

function add(content, auth) {
  return Axios$1.post("http://localhost:1337/ipfs/", content, {
                  headers: octetHeader,
                  auth: convAuth(auth)
                }).then((function (response) {
                  return Promise.resolve(response.data);
                })).catch((function (error) {
                return Promise.resolve(error);
              }));
}

function addStr(_str, auth) {
  return Axios$1.post("http://localhost:1337/ipfs/", str, {
                  headers: octetHeader,
                  auth: convAuth(auth)
                }).then((function (response) {
                  return Promise.resolve(response.data);
                })).catch((function (error) {
                return Promise.resolve(error);
              }));
}

function pin(cid, auth) {
  return Axios$1.put(url(baseURL, cid), ({}), {
                  auth: convAuth(auth)
                }).then((function (response) {
                  return Promise.resolve(response.data);
                })).catch((function (error) {
                return Promise.resolve(error);
              }));
}

function remove(cid, auth) {
  return Axios$1.delete(url(baseURL, cid), {
                  auth: convAuth(auth)
                }).then((function (response) {
                  return Promise.resolve(response.data);
                })).catch((function (error) {
                return Promise.resolve(error);
              }));
}

var user = /* record */[
  /* username */env_username,
  /* password */env_password
];

remove("QmQbPPkak9itW3v8WSohtonCBiJcrnAUhrSW1TGPnmWe3f", user).then((function (result) {
          return Promise.resolve((console.log(result), /* () */0));
        })).catch((function (error) {
        return Promise.resolve((console.log(error), /* () */0));
      }));

exports.baseURL = baseURL;
exports.env_username = env_username;
exports.env_password = env_password;
exports.octetHeader = octetHeader;
exports.convAuth = convAuth;
exports.url = url;
exports.content = content;
exports.list = list;
exports.add = add;
exports.addStr = addStr;
exports.pin = pin;
exports.remove = remove;
exports.user = user;
/* octetHeader Not a pure module */
