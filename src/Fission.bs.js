// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Axios = require("bs-axios/src/axios.js");
var Axios$1 = require("axios");

var baseURL = "http://localhost:1337";

var ipfsURL = "http://localhost:1337/ipfs";

var cidsURL = "http://localhost:1337/ipfs/cids";

function convAuth(auth) {
  return {
          username: auth[/* username */0],
          password: auth[/* password */1]
        };
}

function $$await(promise) {
  return promise.then((function (response) {
                  return Promise.resolve(response.data);
                })).catch((function (prim) {
                return Promise.resolve(prim);
              }));
}

function url(domain, cid) {
  return domain + ("/ipfs/" + cid);
}

var octetHeader = Axios.$$Headers[/* fromObj */0]({
      "content-type": "application/octet-stream"
    });

function octetConfig(auth) {
  return {
          headers: octetHeader,
          auth: convAuth(auth)
        };
}

function blankConfig(auth) {
  return {
          auth: convAuth(auth)
        };
}

function content(cid) {
  return $$await(Axios$1.get(url(baseURL, cid)));
}

function list(auth) {
  return $$await(Axios$1.get(cidsURL, blankConfig(auth)));
}

function add(auth, content) {
  return $$await(Axios$1.post(ipfsURL, content, octetConfig(auth)));
}

function addStr(auth, _str) {
  return $$await(Axios$1.post(ipfsURL, str, octetConfig(auth)));
}

function pin(auth, cid) {
  return $$await(Axios$1.put(url(baseURL, cid), { }, blankConfig(auth)));
}

function remove(auth, cid) {
  return $$await(Axios$1.delete(url(baseURL, cid), blankConfig(auth)));
}

function fissionUser(base, username, password) {
  var user = /* record */[
    /* username */username,
    /* password */password
  ];
  return /* record */[
          /* base */base,
          /* add */(function (param) {
              return add(user, param);
            }),
          /* addStr */(function (param) {
              return addStr(user, param);
            }),
          /* content */content,
          /* pin */(function (param) {
              return pin(user, param);
            }),
          /* remove */(function (param) {
              return remove(user, param);
            }),
          /* url */(function (param) {
              return url(base, param);
            })
        ];
}

function fission(base) {
  return /* record */[
          /* base */base,
          /* login */(function (param, param$1) {
              return fissionUser(base, param, param$1);
            }),
          /* content */content,
          /* url */(function (param) {
              return url(base, param);
            })
        ];
}

var instance = fission(baseURL);

var env_username = "ca2c70bc13298c5109ee";

var env_password = "VlBgonAFjZon2wd2VkTR3uc*p-XMd(L_Zf$nFvACpHQShqJ_Hp2Pa";

exports.baseURL = baseURL;
exports.ipfsURL = ipfsURL;
exports.cidsURL = cidsURL;
exports.env_username = env_username;
exports.env_password = env_password;
exports.convAuth = convAuth;
exports.$$await = $$await;
exports.url = url;
exports.octetHeader = octetHeader;
exports.octetConfig = octetConfig;
exports.blankConfig = blankConfig;
exports.content = content;
exports.list = list;
exports.add = add;
exports.addStr = addStr;
exports.pin = pin;
exports.remove = remove;
exports.fissionUser = fissionUser;
exports.fission = fission;
exports.instance = instance;
/* octetHeader Not a pure module */
